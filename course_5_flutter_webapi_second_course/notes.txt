
npm install -g json-server-auth

json-server-auth --watch --host O_SEU_IP_AQUI db.json

rodar com o arquivo de rotas 
json-server-auth --watch --host O_SEU_IP_AQUI db.json -r routes.json

----------------------------------------------------------------------------------------------------------------

Os cabeçalhos HTTP são uma forma do cliente enviar para o servidor informações importantes sobre a requisição, 
e da mesma forma, do servidor enviar para o cliente informações sobre a resposta. Um cabeçalho de solicitação é 
composto por seu nome case-insensitive (não diferencia letras maiúsculas e minúsculas), seguido por dois pontos 
':' e pelo seu valor (sem quebras de linha).

Alguns dos cabeçalhos mais usados são:

Authorization: Contém as credenciais para autenticar um User-Agent com o servidor;
Last-Modified: Última data de modificação de um recurso, usado para comparar várias versões de um mesmo recurso;
Keep-Alive: Controla por quanto tempo uma conexão persistente deve permanecer aberta;
Accept: Informa ao servidor sobre os tipos de dados que podem ser enviados de volta. Isto é MIME-type;
Content-Type: Indica o tipo de mídia do recurso.

Caso tenha ficado com interesse de estudar mais sobre cabeçalhos HTTP, recomendamos a seguinte leitura:

-----------------------------------------------------------------------------------------------------------------

Redirecionamento na Tela Inicial: Percebemos que, caso a pessoa usuária já tenha logado uma vez, ela já possuirá o 
token de autenticação, então não faz sentido mandá-la para tela de login novamente. Para resolver isso fizemos uma 
verificação se o token é nulo já na nossa main, caso seja, fazemos nossa initialRoute direcionar para login. Caso o 
token seja diferente de nulo, nossa initialRoute recebe o valor home.

Cabeçalho de Autenticação: Aprendemos que precisamos autenticar nossas operações já construídas de GET, POST, PUT e 
DELETE. Para isso, entendemos no Postman como funciona adicionar um cabeçalho de autenticação com Token em uma 
requisição HTTP, e obtivemos e adicionamos essa informação em todas as operações em JournalService.

Deslogando o Usuário: Por fim, aprendemos que é necessário dar a opção para a pessoa usuária deslogar da sua conta. 
Para isso, criamos um Drawer com um botão de sair. Ao ser clicado, esse botão limpa as informações guardadas no 
Shared Preferences e chama a Tela de Login.